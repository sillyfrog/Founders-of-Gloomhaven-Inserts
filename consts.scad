include <clips.scad>;

$fs = 0.5;
$fn = 100;

FLOOR = 1;
WALL = 1.5;
CLIP = 1;
THIN_WALL = 0.6;

SQUARE_TILE = 27; // 25.46mm
TILE_THICK = 3; // 2.18

RESOURCE_TOKEN_STACK = 53; // 51.43mm, 32 tokens

RESOURCE_CARD_W = 46; // 44.05
RESOURCE_CARD_H = 70; // 68.03
RESOURCE_CARD_STACK = 4; // 2.5mm

ACHIEVEMENT_STACK = 6; // 4.72mm

FIRST_PLAYER_H = 31; // 29.12mm
FIRST_PLAYER_W = 27; // 25.19mm
FIRST_PLAYER_D = 11.5; // 9.94mm


CUBE = 9; // 8.6mm

VOTING_TRIANGLE = 29; // 27.44mm
VOTING_STACK = 28; // 26.17, 12 tokens

// Discs
CLAIM_DIA = 13; // 11.83
CLAIM_H = 4; //3.78
CLAIM_STACK = 59; // 55.58

// TOKEN_STACK = 21; // 19.56, 9 tokens
TOKEN_STACK = 14; // 13.02, 6 square tokens

// Cubes
DELIVERY_STACK_D = 58; //55.71
DELIVERY_STACK_W = 18; //16.30
DELIVERY_STACK_H = DELIVERY_STACK_W;

MEEPLE_W = 17; //16.30
MEEPLE_H = 21; //20.23
MEEPLE_STACK = 30.5; //29.01

MONEY_1_DIA = 22.5; //21.22
MONEY_1_STACK = 51; // 49.60
MONEY_3_DIA = 27; //25.64
MONEY_3_STACK = 25.6; //23.97

ROAD_STACK = 53; //51.43

TOKEN_BOX_W = DELIVERY_STACK_W + MEEPLE_W + CLAIM_DIA + WALL * 4;
TOKEN_BOX_D = max(DELIVERY_STACK_D, SQUARE_TILE + WALL + MEEPLE_STACK, CLAIM_STACK) + WALL*2;
TOKEN_BOX_H = DELIVERY_STACK_H + FLOOR - CUBE/2;
TOKEN_BOX_LID_H = FLOOR*2 + SQUARE_TILE - TOKEN_BOX_H;

// Keep the Influence Tokens box the same size to allow stacking
INFLUENCE_BOX_W = TOKEN_BOX_W;
INFLUENCE_BOX_D = TOKEN_BOX_D;
INFLUENCE_BOX_H = (TOKEN_BOX_H + TOKEN_BOX_LID_H + FLOOR)/2;

BANK_BOX_W = MONEY_1_DIA + MONEY_3_DIA + SQUARE_TILE + WALL*4;
BANK_BOX_D = max(MONEY_1_STACK, MONEY_3_STACK, ROAD_STACK) + WALL*2;
BANK_BOX_H = max(MONEY_1_DIA, MONEY_3_DIA, SQUARE_TILE)/2 + FLOOR;

CARD_W = 65; // 63.42
CARD_H = 91; // 89.37

CARD_STACK_INCOME = 1.5; // 0.62, 2 cards
CARD_STACK_ACTION = 2.5; // 1.54, 5 cards, 4 stacks of these
CARD_STACK_ADVISOR = 6.5; // 5.55, 18 cards
CARD_STACK_BUILDING = 7.5; // 6.52, 21 cards

CARD_BOX_W = WALL*2 + CARD_H;
CARD_BOX_D = TOKEN_BOX_W; // These should match for putting in the box
//CARD_BOX_D = WALL*3 + THIN_WALL*6 + CARD_STACK_INCOME + CARD_STACK_ACTION*4 + CARD_STACK_ADVISOR + CARD_STACK_BUILDING + VOTING_STACK/2;
CARD_BOX_H = CARD_W/2 + FLOOR;
CARD_BOX_SPACING = (CARD_BOX_D - CARD_STACK_INCOME - CARD_STACK_ACTION*4 - CARD_STACK_ADVISOR - CARD_STACK_BUILDING - VOTING_STACK/2)/9;

CARD_BOX_LID_W = CARD_BOX_W;
CARD_BOX_LID_D = WALL + VOTING_STACK/2 + THIN_WALL;
CARD_BOX_LID_H = SQUARE_TILE/2 + FLOOR;
VOTING_GAP = (CARD_BOX_W - VOTING_TRIANGLE*2)/3;

CLIP_DIA = 7;

RESOURCE_BOX_W = RESOURCE_CARD_H + WALL*2;
RESOURCE_BOX_D = RESOURCE_CARD_STACK + ACHIEVEMENT_STACK + SQUARE_TILE + WALL*3 + THIN_WALL*1;
RESOURCE_BOX_H = RESOURCE_CARD_W/2 + FLOOR;

RESOURCE_LID_H = RESOURCE_BOX_H;
RESOURCE_LID_W = RESOURCE_BOX_W;
RESOURCE_LID_D = RESOURCE_BOX_D;

// *** Resource Buildings ***

R_STACK = 8; // 6.45, 3 cards
R_STACK_2 = 6; // 4.40
R_STACK_4 = 10; // 8.75

R_1 = 27;
R_2 = 52;
R_3 = 78;
R_4 = 103;
//TIER3_FULL_STACK = 25.89
R_WEAPONS_W_SQ = R_4; //101.60
R_WEAPONS_H_SQ = R_1; //25.72
R_WEAPONS_ANG = 75; // Figured out using brute force, brain melted figuring out formula
R_WEAPONS_W = R_WEAPONS_H_SQ*cos(R_WEAPONS_ANG) + R_WEAPONS_W_SQ*sin(R_WEAPONS_ANG);
R_WEAPONS_H = R_WEAPONS_W_SQ*cos(R_WEAPONS_ANG) + R_WEAPONS_H_SQ*sin(R_WEAPONS_ANG);

R_CLOTH_W = R_2; // 50.77
R_CLOTH_H = R_2;

R_GOV_W = R_3; // 76.40
R_GOV_H = R_2; // 50.95

R_LABOR_W = R_3; // 76.34
R_LABOR_H = R_2; // 50.91

TIER3_W = R_WEAPONS_W + WALL*2;
TIER3_H = R_1 + FLOOR + WALL; // Add in WALL to ensure there is a small lip for the top "row"
TIER3_D = R_STACK*4 + WALL*2 + THIN_WALL*3;

R_BRICK_W = R_3;
R_BRICK_H = R_1;

R_FOOD_W = R_2;
R_FOOD_H = R_2;

R_BOOKS_W = R_3;
R_BOOKS_H = R_1;

R_MACH_W = R_2;
R_MACH_H = R_2;

R_LEATHER_W = R_3;
R_LEATHER_H = R_1;

R_JEWELRY_W = R_2;
R_JEWELRY_H = R_2;

R_3x1_ANG = 70;
R_3x1_W = R_1*cos(R_3x1_ANG) + R_3*sin(R_3x1_ANG);
R_3x1_H = R_3*cos(R_3x1_ANG) + R_1*sin(R_3x1_ANG);

TIER2_W = R_3x1_W + WALL*2;
TIER2_H = TIER3_H;
TIER2_D = R_STACK*6 + WALL*2 + THIN_WALL*5;

R_PREST_1x2_W = R_1;
R_PREST_1x2_H = R_2;
R_PREST_1x2_STACK = R_STACK_2;

R_PREST_1x3_W = R_3;
R_PREST_1x3_H = R_1;
R_PREST_1x3_STACK = R_STACK_4;

R_PREST_L_W = R_2;
R_PREST_L_H = R_2;
R_PREST_L_STACK = R_STACK_2;

R_PREST_T_W = R_3;
R_PREST_T_H = R_2;
R_PREST_T_STACK = R_STACK_2;

R_PREST_Z_W = R_3;
R_PREST_Z_H = R_2;
R_PREST_Z_STACK = R_STACK_2;

R_PREST_LL_W = R_3;
R_PREST_LL_H = R_2;
R_PREST_LL_STACK = R_STACK_2;

R_PREST_2x2_W = R_2;
R_PREST_2x2_H = R_2;
R_PREST_2x2_STACK = R_STACK_2;

R_PREST_ODD_W = R_3;
R_PREST_ODD_H = R_2;
R_PREST_ODD_STACK = R_STACK;

COMPLETION_MARKER_W = 22; // 20.03
COMPLETION_MARKER_H = 17; // 15.93
COMPLETION_MARKER_D = 11; // 9.87

PRESTIGE_W = R_PREST_L_W + R_PREST_1x2_W + THIN_WALL + WALL*2;
PRESTIGE_D = R_PREST_ODD_STACK + R_PREST_2x2_STACK+ R_PREST_LL_STACK+ R_PREST_Z_STACK+ R_PREST_T_STACK+ R_PREST_L_STACK+ R_PREST_1x3_STACK+ COMPLETION_MARKER_W + WALL*3 + THIN_WALL * 6;
PRESTIGE_H = R_1 + FLOOR + WALL; // Add in WALL to ensure there is a small lip for the top "row"

PRESTIGE_LID_D = COMPLETION_MARKER_W + R_PREST_1x3_STACK + WALL*2 + THIN_WALL;
PRESTIGE_LID_W = PRESTIGE_W;
PRESTIGE_LID_H = R_PREST_1x3_H/2 + FLOOR;
